var documenterSearchIndex = {"docs":
[{"location":"reference/#Reference","page":"Reference","title":"Reference","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"​","category":"page"},{"location":"reference/#Contents","page":"Reference","title":"Contents","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"​","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"Pages = [\"reference.md\"]","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"​","category":"page"},{"location":"reference/#Index","page":"Reference","title":"Index","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"​","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"Pages = [\"reference.md\"]","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"​","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"Modules = [PDEOptimizationProblems]","category":"page"},{"location":"reference/#PDEOptimizationProblems.meta","page":"Reference","title":"PDEOptimizationProblems.meta","text":"PDEOptimizationProblems.meta\n\nA composite type that represents the main features of the PDE-constrained optimization problem.     optimize    ∫( f(θ, y, u) )dΩ     subject to  lvar ≤ (θ, y, u)    ≤ uvar                 ∫( res(θ, y, u, v) )dΩ = 0 –- The following keys are valid: Problem meta\n\ndomaindim: dimension of the domain 1/2/3 for 1D/2D/3D\npbtype: in pbtypes\nnθ: size of the unknown vector\nny: number of unknown function\nnu: number of control function\n\nSolution meta\n\noptimalvalue: best known objective value (NaN if unknown, -Inf if unbounded problem)\n\nClassification\n\nobjtype: in objtypes\ncontype: in contypes\norigin: in origins\nhas_cvx_obj: true if the problem has a convex objective\nhas_cvx_con: true if the problem has convex constraints\nhas_bounds: true if the problem has bound constraints\nhas_fixed_variables: true if it has fixed variables\n\n\n\n\n\n","category":"constant"},{"location":"reference/#PDEOptimizationProblems.burger1d-Tuple","page":"Reference","title":"PDEOptimizationProblems.burger1d","text":"Burger1d(;n :: Int = 512, kwargs...)\n\nLet Ω=(0,1), we solve the one-dimensional ODE-constrained control problem: min{y,u}   0.5 ∫Ω​ |y(x) - yd(x)|^2dx + 0.5 * α * ∫Ω​ |u|^2 s.t.          -ν y'' + yy' = u + h,   for    x ∈  Ω,                   y(0) = 0, y(1)=-1,  for    x ∈ ∂Ω, where the constraint is a 1D stationary Burger's equation over Ω, with h(x)=2(ν + x^3) and ν=0.08. The first objective measures deviation from the data y_d(x)=-x^2, while the second term regularizes the control with α = 0.01.\n\nThis example has been used in Section 9.1\n\nThe specificity of the problem:\n\nquadratic objective function;\nnonlinear constraints with AD jacobian;\n\nSuggestions:\n\nFEOperatorFromTerms has only one term. We might consider splitting linear and\n\nnonlinear terms.\n\n\n\n\n\n","category":"method"},{"location":"reference/#PDEOptimizationProblems.cellincrease-Tuple","page":"Reference","title":"PDEOptimizationProblems.cellincrease","text":"Mairet, F., & Bayen, T. (2021). The promise of dawn: microalgae photoacclimation as an optimal control problem of resource allocation. Journal of Theoretical Biology, 515, 110597.\n\nUsing a photosynthetic rate proportional to the photosynthetic apparatus mass fraction.\n\n\n\n\n\n","category":"method"},{"location":"reference/#PDEOptimizationProblems.cellincrease_MichaelisMenten-Tuple","page":"Reference","title":"PDEOptimizationProblems.cellincrease_MichaelisMenten","text":"Mairet, F., & Bayen, T. (2021). The promise of dawn: microalgae photoacclimation as an optimal control problem of resource allocation. Journal of Theoretical Biology, 515, 110597.\n\nUsing Michaelis-Menten's function for the photosynthetic rate.\n\n\n\n\n\n","category":"method"},{"location":"reference/#PDEOptimizationProblems.controlelasticmembrane1-Tuple","page":"Reference","title":"PDEOptimizationProblems.controlelasticmembrane1","text":"controlelasticmembrane1(; n :: Int = 10, args...)\n\nLet Ω = (-1,1)^2, we solve the following distributed Poisson control problem with Dirichlet boundary:\n\nmin{y ∈ H^10,u ∈ H^1}   0.5 ∫Ω​ |y(x) - yd(x)|^2dx + 0.5 * α * ∫Ω​ |u|^2  s.t.         -Δy = h + u,   for    x ∈  Ω                y  = 0,       for    x ∈ ∂Ω               umin(x) <=  u(x) <= umax(x) where yd(x) = -x[1]^2 and α = 1e-2. The force term is h(x1,x2) = - sin( ω x1)sin( ω x2) with  ω = π - 1/8. In this first case, the bound constraints are constants with umin(x) = 0.0 and umax(x) = 1.0.\n\n\n\n\n\n","category":"method"},{"location":"reference/#PDEOptimizationProblems.controlelasticmembrane2-Tuple{}","page":"Reference","title":"PDEOptimizationProblems.controlelasticmembrane2","text":"controlelasticmembrane2(; n :: Int = 10, args...)\n\nLet Ω = (-1,1)^2, we solve the following distributed Poisson control problem with Dirichlet boundary:\n\nmin{y ∈ H^10,u ∈ H^1}   0.5 ∫Ω​ |y(x) - yd(x)|^2dx + 0.5 * α * ∫Ω​ |u|^2  s.t.         -Δy = h + u,   for    x ∈  Ω                y  = 0,       for    x ∈ ∂Ω               umin(x) <=  u(x) <= umax(x) where yd(x) = -x[1]^2 and α = 1e-2. The force term is h(x1,x2) = - sin( ω x1)sin( ω x2) with  ω = π - 1/8. In this second case, the bound constraints are umin(x) = x1+x2 and umax(x) = x1^2+x2^2 applied at the midpoint of the cells.\n\n\n\n\n\n","category":"method"},{"location":"reference/#PDEOptimizationProblems.incompressiblenavierstokes-Tuple","page":"Reference","title":"PDEOptimizationProblems.incompressiblenavierstokes","text":"incompressibleNavierStokes(; n :: Int64 = 3, kargs...)\n\nThis corresponds to the incompressible Navier-Stokes equation described in the Gridap Tutorials: https://gridap.github.io/Tutorials/stable/pages/t008incnavier_stokes/\n\nIt has no objective function and no control, just the PDE.\n\n\n\n\n\n","category":"method"},{"location":"reference/#PDEOptimizationProblems.inversepoissonproblem2d-Tuple{}","page":"Reference","title":"PDEOptimizationProblems.inversepoissonproblem2d","text":"inversePoissonproblem2d(;n :: Int = 512, kwargs...)\n\nLet Ω=(-1,1)^2, we solve the 2-dimensional PDE-constrained control problem: min{y ∈ H1^0, u ∈ L^∞}   0.5 ∫Ω​ |y(x) - yd(x)|^2dx + 0.5 * α * ∫Ω​ |u|^2 s.t.          -∇⋅(z∇u) = h,   for    x ∈  Ω,                   u(x) = 0,   for    x ∈ ∂Ω. Let c = (0.2,0.2) and and define S1 = {x | ||x-c||2 ≤ 0.3 } and S2 = {x | ||x-c||1 ≤ 0.6 }. The target ud is generated as the solution of the PDE with z*(x) = 1 + 0.5 * I{S1}(x) + 0.5 * I{S2}(x). The force term here is h(x1,x2) = - sin( ω x1)sin( ω x2) with  ω = π - 1/8. The control variable z represents the diffusion coefficients for the Poisson problem that we are trying to recover. Set α = 10^{-4} and discretize using P1 finite elements on a uniform mesh of 1089 triangles and employ an identical discretization for the optimization variables u, thus ncon = 1089 and npde = 961. Initial point is y0=1 and u_0 = 1. z ≥ 0 (implicit)\n\nThis example has been used in Section 9.2\n\n\n\n\n\n","category":"method"},{"location":"reference/#PDEOptimizationProblems.membrane-Tuple","page":"Reference","title":"PDEOptimizationProblems.membrane","text":"https://arxiv.org/pdf/2103.14552.pdf Example 1. MEMBRANE Multilevel Active-Set Trust-Region (MASTR) Method for Bound Constrained Minimization Alena Kopaničáková and Rolf Krause\n\nThe solution and original problem is given in Domorádová, M., & Dostál, Z. (2007). Projector preconditioning for partially bound‐constrained quadratic optimization. Numerical Linear Algebra with Applications, 14(10), 791-806.\n\n\n\n\n\n","category":"method"},{"location":"reference/#PDEOptimizationProblems.penalizedpoisson-Tuple","page":"Reference","title":"PDEOptimizationProblems.penalizedpoisson","text":"Let Ω=(0,1)^2, we solve the unconstrained optimization problem: min{u ∈ H1^0}   0.5 ∫_Ω​ |∇u|^2 - w u dx s.t.              u(x) = 0,     for    x ∈ ∂Ω whre w(x)=1.0.\n\nThe minimizer of this problem is the solution of the Poisson equation:  ∫_Ω​ (∇u ∇v - f*v)dx = 0, ∀ v ∈ Ω  u = 0, x ∈ ∂Ω\n\nThis example has been used in Exercice 10.2.4 (p. 308)\n\n\n\n\n\n","category":"method"},{"location":"reference/#PDEOptimizationProblems.poisson3d-Tuple{}","page":"Reference","title":"PDEOptimizationProblems.poisson3d","text":"poisson3d(; n :: Int = 10)\n\nThis example represents a Poisson equation with Dirichlet boundary conditions over the 3d-box, (0,1)^3, and we minimize the squared H_1-norm to a manufactured solution. So, the minimal value is expected to be 0.\n\nIt is inspired from the 2nd tutorial in Gridap.jl: https://gridap.github.io/Tutorials/stable/pages/t002_validation/\n\n\n\n\n\n","category":"method"},{"location":"reference/#PDEOptimizationProblems.poissonboltzman2d-Tuple{}","page":"Reference","title":"PDEOptimizationProblems.poissonboltzman2d","text":"poissonBoltzman2d(; n :: Int = 100)\n\nLet Ω=(-1,1)^2, we solve the 2-dimensional PDE-constrained control problem: min{y ∈ H1^0, u ∈ L^∞}   0.5 ∫Ω​ |y(x) - yd(x)|^2dx + 0.5 * α * ∫Ω​ |u|^2  s.t.         -Δy + sinh(y) = h + u,   for    x ∈  Ω                          y(x) = 0,     for    x ∈ ∂Ω\n\nThe force term here is h(x1,x2) = - sin( ω x1)sin( ω x2) with  ω = π - 1/8. The targeted function is yd(x) = {10 if x ∈ [0.25,0.75]^2, 5 otherwise}. We discretize using P1 finite elements on a uniform mesh with 10201 triangles, resulting in a problem with n = 20002 variables and m = 9801 constraints. We use y0=1 and u0 = 1 as the initial point.\n\nThis example has been used in Section 9.3\n\nThe specificity of the problem:\n\nquadratic objective function;\nnonlinear constraints with AD jacobian;\n\n\n\n\n\n","category":"method"},{"location":"reference/#PDEOptimizationProblems.smallestlaplacianeigenvalue-Tuple{}","page":"Reference","title":"PDEOptimizationProblems.smallestlaplacianeigenvalue","text":"smallestLaplacianeigenvalue(; n :: Int = 10, args...)\n\nWe solve the following problem:\n\nmin{u,z}   ∫Ω​ |∇u|^2  s.t.        ∫_Ω​ u^2 = 1,     for    x ∈  Ω                 u    = 0,     for    x ∈ ∂Ω\n\nThe solution is an eigenvector of the smallest eigenvalue of the Laplacian operator,  given by the value of the objective function.  λ is an eigenvalue of the Laplacian if there exists u such that\n\nΔu + λ u = 0,   for    x ∈  Ω         u = 0,   for    x ∈ ∂Ω\n\nThis example has been used in Exercice 10.2.11 (p. 313) and more eigenvalue problems can be found in Section 7.3.2\n\nTODO:\n\ndoes the 1 work as it is? or should it be put in lcon, ucon?\nit is 1D for now.\n\n\n\n\n\n","category":"method"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = PDEOptimizationProblems","category":"page"},{"location":"#PDEOptimizationProblems","page":"Home","title":"PDEOptimizationProblems","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for PDEOptimizationProblems.","category":"page"}]
}
